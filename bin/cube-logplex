#!/usr/bin/env node

var util = require("util"),
    child = require("child_process"),
    lines = require("../lib/cube-logplex/lines"),
    router = require("../lib/cube-logplex/router");

restart();

function restart() {
  var logs = child.spawn("heroku", ["logs", "-t", "-n", "0"]),
      idleTimeout;

  lines(logs.stdout).on("line", function(line) {
    var i0 = line.indexOf(" "),
        i1 = line.indexOf("[", i0),
        i2 = line.indexOf("]", i1),
        date = new Date(line.substring(0, i0)),
        source = line.substring(i0 + 1, i1),
        dyno = line.substring(i1 + 1, i2),
        message = line.substring(i2 + 3);
    if (!isNaN(date) && message) router(date, source, dyno, message);
    clearTimeout(idleTimeout);
    idleTimeout = setTimeout(idle, 60000);
  });

  logs.on("error", function(error) {
    util.log(error);
  });

  logs.on("exit", function(code, signal) {
    util.log("heroku process terminated with code " + code + "; restarting.");
    logs.removeAllListeners();
    clearTimeout(idleTimeout);
    setTimeout(restart, 5000);
  });

  function idle() {
    util.log("heroku process stopped responding; restarting.");
    logs.removeAllListeners();
    logs.kill();
    setTimeout(restart, 30000);
  }
}
